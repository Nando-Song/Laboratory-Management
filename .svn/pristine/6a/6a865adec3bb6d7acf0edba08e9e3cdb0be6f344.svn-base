using LABMANAGE.Service.ysl_Sign_In;
using LABMANAGE.Service.ysl_Sign_In.Dto;
using LABMANAGE.UntityCode;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace LABMANAGE.Controllers
{
    public class YSL_Sign_InController : Controller
    {
        public ISign_InService ISIS { get; set; }

        public IUserDataService IUDS { get; set; }

        //
        // GET: /ysl_Sign_In/
        public ActionResult Sign_Show()
        {
            try
            {
                int UID = int.Parse(LoginBase.ID);
                List<User_name_uidDto> all_user = IUDS.getUser();
                this.TempData["list"] = all_user;
                this.TempData["user"] = LoginBase.RoleCode;
                return View();
            }
            catch
            {
                return View("../Login/Login");
            }
            
        }
        //获取自己的签到信息
        #region 获取默认（本人）签到信息
        public JsonResult Sign_json(string text)
        {
            int UID = int.Parse(LoginBase.ID);

            List<Sign_dateModel> JsonData = ISIS.Get_data(UID,1);//1web 2考勤机

            return Json(ISIS.Obj2Json(JsonData), JsonRequestBehavior.AllowGet);
        }
        #endregion

        //查看其它用户签到情况
        #region 获取用户签到信息（限学生）
        public JsonResult changeuser(string text)
        {
            int UID = int.Parse(Request.Form[0].ToString());
            int type = int.Parse(Request.Form[1].ToString());

            
            List<Sign_dateModel> JsonData = ISIS.Get_data(UID,type);

            return Json(ISIS.Obj2Json(JsonData), JsonRequestBehavior.AllowGet);
        }
        #endregion

        #region 判断当前用户是否签到
        public JsonResult Is_Sign(string text)
        {
            int UID = 1 ;
            try
            {
                UID = int.Parse(LoginBase.ID);

                bool IsSign = ISIS.Is_Sign_In(UID);

                if (IsSign)
                {
                    return Json("true", JsonRequestBehavior.AllowGet);
                }
                else
                {
                    return Json("false", JsonRequestBehavior.AllowGet);
                }
            }
            catch
            {
                return Json("false", JsonRequestBehavior.AllowGet); ;
            }
        }
        #endregion

        #region 用户签到
        public JsonResult User_Sign(string text)
        {
            int UID = int.Parse(LoginBase.ID);
            
            //
            //IP属性目前没有加，等待后续更改
            //
            //string IP = LoginBase.IP;
            string IP = "";
            bool flag = ISIS.userSign(UID, IP);
            return Json(flag, JsonRequestBehavior.AllowGet);
        }
        #endregion

    }
}